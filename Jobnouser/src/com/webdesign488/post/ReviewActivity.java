package com.webdesign488.post;import java.util.ArrayList;import java.util.List;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import com.webdesign488.post.ChoiceJob1Activity.Holder;import com.webdesign488.post.model.Area;import com.webdesign488.post.model.ForInfo;import com.webdesign488.post.net.AsyncTaskUtil;import com.webdesign488.post.util.AppManager;import com.webdesign488.post.util.Content;import com.webdesign488.post.view.ProgressDialog;import android.app.Activity;import android.content.Intent;import android.net.Uri;import android.os.Bundle;import android.os.Handler;import android.text.TextUtils;import android.view.Gravity;import android.view.KeyEvent;import android.view.LayoutInflater;import android.view.MotionEvent;import android.view.View;import android.view.ViewGroup;import android.view.View.OnClickListener;import android.view.View.OnKeyListener;import android.view.View.OnTouchListener;import android.view.ViewGroup.LayoutParams;import android.widget.AdapterView;import android.widget.BaseAdapter;import android.widget.Button;import android.widget.ListView;import android.widget.PopupWindow;import android.widget.TextView;import android.widget.Toast;import android.widget.AdapterView.OnItemClickListener;public class ReviewActivity extends BaseActivity {   	private String IMEI;    private List<ForInfo> listInfo1 =new ArrayList<ForInfo>(); 	private PopupWindow mPop; 	private PopupWindow mPop1;	private int mPosition;	private String ID;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.review);		initView();		ID =getIntent().getStringExtra("ID");		initData();	}	private void initData() {		IMEI =getSharedPreferences("AREA", Activity.MODE_PRIVATE).getString("IMEI", "");			     List<String> list =new ArrayList<String>();	     List<String> list1 =new ArrayList<String>();	     list.add("IMEI");	     list1.add(IMEI);	     list.add("id");	     list1.add(ID);	      AsyncTaskUtil.getJson(list, list1,handler, dialog, Content.APPLY, ReviewActivity.this, 3);	}	private AreaAdapter adapter;	private Handler handler = new Handler() {		public void handleMessage(android.os.Message msg) {			switch (msg.what) {			case 1:				Toast.makeText(getApplicationContext(),						getResources().getString(R.string.toast11), 1).show();				break;			case 3:				String json1 =(String) msg.obj;				if(!TextUtils.isEmpty(json1)){					try {						JSONObject jRoot = new JSONObject(json1);						int code = jRoot.getInt("code");						if(code ==1){							JSONArray data =jRoot.getJSONArray("data");							listInfo1.clear();							for(int i=0;i<data.length();i++){							ForInfo info =new ForInfo();							info.setAid( data.getJSONObject(i).getInt("aid")+"");							info.setAstatus( data.getJSONObject(i).getInt("astatus")+"");							info.setAmobile(data.getJSONObject(i).getString("usermobile")+"");							info.setAname(data.getJSONObject(i).getString("username"));							info.setAdate(data.getJSONObject(i).getString("adate"));							info.setUserintro(data.getJSONObject(i).getString("userintro"));							info.setWebsite(data.getJSONObject(i).getString("website"));							info.setWechat(data.getJSONObject(i).getString("wechat"));							info.setQqno(data.getJSONObject(i).getString("qqno"));							info.setQqzone(data.getJSONObject(i).getString("qqzone"));							info.setWhatapp(data.getJSONObject(i).getString("whatapp"));							listInfo1.add(info);							}							adapter =new AreaAdapter();							mLvReview.setAdapter(adapter);						}else{	                          Toast.makeText(getApplicationContext(), getResources().getString(R.string.toast10), 0).show();						}											} catch (JSONException e) {						e.printStackTrace();					}				}				if (dialog.isShow()) {					dialog.cancel();				}				break;			case 5:				String json2 =(String) msg.obj;				if(!TextUtils.isEmpty(json2)){					try {						JSONObject jRoot = new JSONObject(json2);						int code = jRoot.getInt("code");						if(code ==1){	                Toast.makeText(getApplicationContext(), getResources().getString(R.string.psuccess), 0).show();					if (mPop != null && mPop.isShowing()) {						mPop.dismiss();						mPop = null;											}					if (dialog.isShow()) {						dialog.cancel();					}	                AppManager.getAppManager().finishActivity();						}else if(code==0){							String msg1 =jRoot.getString("msg");			                Toast.makeText(getApplicationContext(), msg1, 0).show();						}					} catch (JSONException e) {						e.printStackTrace();					}				}				if (dialog.isShow()) {					dialog.cancel();				}				                				break;			default:				break;			}		}	};	private ProgressDialog dialog;	private TextView mTVarea1;	private ListView mLvReview;	private View layout;	private Button mBTtell;	private void initView() {		mLvReview = (ListView) this.findViewById(R.id.mLvReview);		mLvReview.setOnItemClickListener(new OnItemClickListener() {			@Override			public void onItemClick(AdapterView<?> parent, View view,					int position, long id) {				mPosition =position;				showDialog1();			}		});		dialog = new com.webdesign488.post.view.ProgressDialog(				ReviewActivity.this);	}	class Holder {		TextView name,tell,time;	}	private class AreaAdapter extends BaseAdapter {		@Override		public int getCount() {			// TODO Auto-generated method stub			return listInfo1.size();		}		@Override		public Object getItem(int position) {			// TODO Auto-generated method stub			return listInfo1.get(position);		}		@Override		public long getItemId(int position) {			// TODO Auto-generated method stub			return position;		}		@Override		public View getView(int position, View convertView, ViewGroup parent) {			Holder holder = null;			if (convertView == null) {				convertView = LayoutInflater.from(getApplicationContext()).inflate(R.layout.item_review, null);				holder = new Holder();				holder.name = (TextView) convertView.findViewById(R.id.name);				holder.tell = (TextView) convertView.findViewById(R.id.tele);				holder.time = (TextView) convertView.findViewById(R.id.time);				convertView.setTag(holder);			} else {				holder = (Holder) convertView.getTag();			}			holder.name.setText(listInfo1.get(position).getAname());			holder.tell.setText(listInfo1.get(position).getAmobile());			holder.time.setText(listInfo1.get(position).getAdate());			return convertView;		}	}	OnClickListener listener =new View.OnClickListener() {				@Override		public void onClick(View v) {		 switch (v.getId()) {			case R.id.mTVw1Id:				if (mPop != null && mPop.isShowing()) {					mPop.dismiss();					mPop = null;									}				break;			case R.id.mTVw1Ida:				if (mPop1 != null && mPop1.isShowing()) {					mPop1.dismiss();					mPop1 = null;									}				break;			case R.id.mBTW1nexta:				if (mPop1 != null && mPop1.isShowing()) {					mPop1.dismiss();					mPop1 = null;				}				break;		case R.id.mBTgocancel1:			if (mPop != null && mPop.isShowing()) {				mPop.dismiss();				mPop = null;			}                			break;		case R.id.mBTgocancel:			initData3();			break;		case R.id.mBTtell1:            if(listInfo1.size()>(mPosition+1)){            	mPosition =mPosition+1;            	 showDialog1();            }else{            	Toast.makeText(getApplicationContext(), getResources().getString(R.string.toast12), 0).show();            }			break;		case R.id.mBTtell:			if(!TextUtils.isEmpty(listInfo1.get(mPosition).getAmobile())){			 Intent intent=new Intent(Intent.ACTION_CALL,Uri.parse("tel:"+listInfo1.get(mPosition).getAmobile()));			  startActivity(intent);			}else{				Toast.makeText(getApplicationContext(), R.string.toast14, 0).show();			}			break;		case R.id.mBTtella:			if(!TextUtils.isEmpty(listInfo1.get(mPosition).getAmobile())){				 Intent intent=new Intent(Intent.ACTION_CALL,Uri.parse("tel:"+listInfo1.get(mPosition).getAmobile()));				  startActivity(intent);				}else{			     Toast.makeText(getApplicationContext(), R.string.toast14, 0).show();				}			break;		default:			break;		}		}	};	private Button mBTgocancel1;	private Button mBTW1success;	private Button mBTW1next;	private TextView mTVw1name;	private TextView mTvww1;	private TextView mTvww2;	private TextView mTvww3;	private TextView mTvww4;	private TextView mTvww5;		private TextView mTVw1show;	private TextView mTVw1tell;	private TextView mTVw1time;	private TextView mTVw1Id;	 private void initData3() {			IMEI =getSharedPreferences("AREA", Activity.MODE_PRIVATE).getString("IMEI", "");		     List<String> list =new ArrayList<String>();		     List<String> list1 =new ArrayList<String>();		     list.add("IMEI");		     list1.add(IMEI);		     list.add("id");		     list1.add(ID);		     list.add("aid");		     list1.add(listInfo1.get(mPosition).getAid()+"");		      AsyncTaskUtil.getJson(list, list1,handler, dialog, Content.APPLYSUCCESS, ReviewActivity.this,5);		}	private void showDialog1() {		/*		 * LayoutInflater mInflater =		 * LayoutInflater.from(ExecuteOrderActivity.this); layout =		 * mInflater.inflate(R.layout.window, null);		 */		layout = View.inflate(ReviewActivity.this, R.layout.window1, null);		layout.setFocusable(true); // 这个很重要		layout.setFocusableInTouchMode(true);		mPop = new PopupWindow(layout, LayoutParams.FILL_PARENT,				LayoutParams.FILL_PARENT,true);		mPop.setFocusable(true);        		mPop.showAtLocation(				ReviewActivity.this.findViewById(R.id.mLlPubInfo1),				Gravity.CENTER, 0, 0);// 在屏幕顶部|居右，带偏移		mBTtell =(Button)layout.findViewById(R.id.mBTtell);		mBTtell.setOnClickListener(listener);		mBTgocancel1 =(Button)layout.findViewById(R.id.mBTgocancel1);		mBTgocancel1.setOnClickListener(listener);		mBTW1success = (Button)layout.findViewById(R.id.mBTgocancel);		mBTW1next =(Button)layout.findViewById(R.id.mBTtell1);		mBTW1success.setOnClickListener(listener);		mBTW1next.setOnClickListener(listener);		mTVw1name =(TextView)layout.findViewById(R.id.mTVw1name);		mTVw1show =(TextView)layout.findViewById(R.id.mTVw1show);		mTVw1tell =(TextView)layout.findViewById(R.id.mTVw1tell);		mTVw1time =(TextView)layout.findViewById(R.id.mTVw1time);				mTvww1 =(TextView)layout.findViewById(R.id.mTvww1);		mTvww2 =(TextView)layout.findViewById(R.id.mTvww2);		mTvww3 =(TextView)layout.findViewById(R.id.mTvww3);		mTvww4 =(TextView)layout.findViewById(R.id.mTvww4);		mTvww5 =(TextView)layout.findViewById(R.id.mTvww5);		mTvww1.setText(listInfo1.get(mPosition).getWebsite());		mTvww2.setText(listInfo1.get(mPosition).getWechat());		mTvww3.setText(listInfo1.get(mPosition).getQqno());		mTvww4.setText(listInfo1.get(mPosition).getQqzone());		mTvww5.setText(listInfo1.get(mPosition).getWhatapp());		mTVw1name.setText(listInfo1.get(mPosition).getAname());		mTVw1show.setText(listInfo1.get(mPosition).getUserintro());		mTVw1tell.setText(listInfo1.get(mPosition).getAmobile());		mTVw1time.setText(listInfo1.get(mPosition).getAdate());		mTVw1Id =(TextView)layout.findViewById(R.id.mTVw1Id);		mTVw1Id.setOnClickListener(listener);			// mPop.setFocusable(true);			// mPop.setOutsideTouchable(true);				layout.setOnKeyListener(new OnKeyListener() {			@Override			public boolean onKey(View v, int keyCode, KeyEvent event) {				switch (keyCode) {				case KeyEvent.KEYCODE_BACK:					if (mPop != null && mPop.isShowing()) {						mPop.dismiss();						mPop = null;												return true;					}					break;				default:					break;				}				return false;			}		});		layout.setOnTouchListener(new OnTouchListener() {			@Override			public boolean onTouch(View v, MotionEvent event) {/*					if (mPop != null && mPop.isShowing()) {					mPop.dismiss();					mPop = null;				}*/					return true;			}		});			}	}